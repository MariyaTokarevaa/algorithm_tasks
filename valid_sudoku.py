'''–£—Å–ª–æ–≤–∏—è –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –ü–æ–ª—è –°—É–¥–æ–∫—É (9x9):
1. –°—Ç—Ä–æ–∫–∏: –í –∫–∞–∂–¥–æ–π –∏–∑ 9 —Å—Ç—Ä–æ–∫ —Ü–∏—Ñ—Ä—ã –æ—Ç '1' –¥–æ '9' –º–æ–≥—É—Ç –≤—Å—Ç—Ä–µ—á–∞—Ç—å—Å—è –Ω–µ –±–æ–ª–µ–µ –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–∞.
–ü—É—Å—Ç—ã–µ —è—á–µ–π–∫–∏ (–æ–±–æ–∑–Ω–∞—á–µ–Ω—ã —Å–∏–º–≤–æ–ª–æ–º '.') –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è.
2. –°—Ç–æ–ª–±—Ü—ã: –í –∫–∞–∂–¥–æ–º –∏–∑ 9 —Å—Ç–æ–ª–±—Ü–æ–≤ —Ü–∏—Ñ—Ä—ã –æ—Ç '1' –¥–æ '9' —Ç–∞–∫–∂–µ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –Ω–µ –±–æ–ª–µ–µ –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–∞.
3.  –ö–≤–∞–¥—Ä–∞—Ç—ã 3x3: –ö–∞–∂–¥—ã–π –∏–∑ 9 –Ω–µ–ø–µ—Ä–µ—Å–µ–∫–∞—é—â–∏—Ö—Å—è –∫–≤–∞–¥—Ä–∞—Ç–æ–≤ 3x3 (–º–∞–ª—ã—Ö –∫–≤–∞–¥—Ä–∞—Ç–æ–≤)
–¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ü–∏—Ñ—Ä—ã –æ—Ç '1' –¥–æ '9' –Ω–µ –±–æ–ª–µ–µ –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–∞.

‚ùóÔ∏è –í–∞–∂–Ω–æ: –ü–æ–ª–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º –ø–æ —ç—Ç–∏–º –ø—Ä–∞–≤–∏–ª–∞–º,
–Ω–æ –æ–Ω–æ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ä–µ—à–∞–µ–º—ã–º –∏–ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º.
–ú—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∞–≤–∏–ª–∞–º.

üéØ –ó–∞–¥–∞—á–∞:
–ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –Ω–∞–ø—Ä–∏–º–µ—Ä, is_valid_sudoku(board: list[list[str]]) -> bool,
–∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –ø–æ–ª–µ 9x9 (—Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤ —Å—Ç—Ä–æ–∫) –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç True,
–µ—Å–ª–∏ –ø–æ–ª–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –∏ False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.'''

board = [
  ["5","3",".",".","7",".",".",".","."],
  ["6",".",".","1","9","5",".",".","."],
  [".","9","8",".",".",".",".","6","."],
  ["8",".",".",".","6",".",".",".","3"],
  ["4",".",".","8",".","3",".",".","1"],
  ["7",".",".",".","2",".",".",".","6"],
  [".","6",".",".",".",".","2","8","."],
  [".",".",".","4","1","9",".",".","5"],
  [".",".",".",".","8",".",".","7","9"]
]

def is_valid_sudoku_pythonic(board):
    res = []
    for i, row in enumerate(board):
        for j, num in enumerate(row):
            if num != '.':
                res += [(i, num),
                        (num, j),
                        (i // 3, j // 3, num)]

    return len(res) == len(set(res))
print(is_valid_sudoku_pythonic(board))